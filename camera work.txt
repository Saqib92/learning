//to use in page.ts
this.camera.pickImage(1).then((res:any)=>{
              console.log(res);
              this.camera.uploadPhoto(res, '.png', '/api/helper/upload_image').then((imgRes:any)=>{
                 this.show_pic(imgRes)
                console.log(imgRes)
              })
            })


// service.ts



import { Injectable } from '@angular/core';
import { Camera, CameraOptions } from '@ionic-native/camera/ngx';
import { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';
import { File } from '@ionic-native/file/ngx';
import { GlobaldataService } from 'src/app/providers/globaldata.service';
import { GeneralService } from './general.service';
@Injectable({
  providedIn: 'root'
})
export class CameraService {

  constructor(
    private camera: Camera,
    private transfer: FileTransfer, 
    private file: File,
    private general:GeneralService
  ) { } 
  imageData:any;

  pickImage(sourceType: number) : Promise<any> {
    return new Promise((resolve, reject) => {
      this.selectImage(sourceType).then( imageURI => {
        resolve(imageURI)
      })
    })
  }

 selectImage(srcType) : Promise<any> {

    let options: CameraOptions = {
      quality: 100,
      sourceType: srcType,
      destinationType: this.camera.DestinationType.FILE_URI,
      correctOrientation: true,
      encodingType: this.camera.EncodingType.PNG,
      mediaType: this.camera.MediaType.PICTURE
    }

    return new Promise(resolve => {
      this.camera.getPicture(options)
        .then((imageURI) => {

          this.imageData = imageURI;

          resolve(this.imageData)
        })
        .catch(err => console.log(err))
    })
  }
  uploadPhoto(path:string, fileType:string, url:string) : Promise<any> {
    const fileTransfer: FileTransferObject = this.transfer.create();
    let options: FileUploadOptions = {
      fileKey: 'image',
      fileName: fileType,
      chunkedMode: false,
      headers: {Authorization: 'Bearer '+ GlobaldataService.loginToken }
      //mimeType: "image/jpeg",
    }
    return new Promise(resolve => {
      fileTransfer.upload(path, this.general.imageUrl+url, options).then((data) => {
          let res = JSON.parse(data.response);
          console.log(res)
          this.general.presentToast('Media Uploaded');
          resolve(res)
        }, (err) => {
          
      });
    })
  }
}